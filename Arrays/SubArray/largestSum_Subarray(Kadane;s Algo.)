// Modification in the Kadane's Algorithm , this will work even if all the elements are negative.

#include<bits/stdc++.h>
using namespace std;

int largestSum(vector<int> A) {
   int largestSum = INT_MIN;
  int cs = 0;
  for(int i=0; i<A.size(); i++){
      cs += A[i];
      if(cs > largestSum ){
          largestSum = cs;
      }
      if(cs < 0){
          cs = 0;
      }
  }
  return largestSum;
}
int main()
{
    vector<int> A;
    A.push_back(-4);
    A.push_back(-3);
    A.push_back(-7);
    A.push_back(-5);
    
    for(int i=0; i<A.size(); i++){
        cout<<A[i]<<" ";
    }
    cout<<endl;
    cout<<"largest sum of the subarray is :"<<largestSum(A);
    return 0;
}
